{"version":3,"sources":["Resume.pdf","components/NavComponent.js","components/ProjectCards.js","components/PortfolioDis.js","pages/Portfolio.js","components/Title.js","components/MyInfo.js","pages/AboutMe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavComponent","Navbar","bg","variant","Brand","Nav","className","Link","href","ProjectCard","props","title","description","repo","deployedPage","PortfolioData","pfData","map","data","index","ProjectCards","Portfolio","Container","Row","PortfolioDis","Title","Jumbotron","Pdf","target","rel","MyInfo","AboutMe","Col","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+oDAAAA,EAAOC,QAAU,IAA0B,oC,yMCmB5BC,MAff,WACE,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QAC1B,kBAACF,EAAA,EAAOG,MAAR,2BACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUC,KAAK,KAAf,QACA,kBAACH,EAAA,EAAIE,KAAL,CAAUC,KAAK,cAAf,iB,gBCIOC,MAbf,SAAsBC,GAEpB,OACE,6BACE,4BAAKA,EAAMC,OACX,2BAAID,EAAME,aACV,uBAAGJ,KAAME,EAAMG,MAAf,SACA,uBAAGL,KAAME,EAAMI,cAAf,iBACA,8B,QCkDSC,MArDf,WAIE,OACE,6BACE,wBAAIT,UAAU,SACd,qDACA,uDACA,wBAAIA,UAAU,SAEbU,EAAOC,KAAI,SAACC,EAAMC,GAAP,OACV,kBAACC,EAAD,CACET,MAAOO,EAAKP,MACZC,YAAaM,EAAKN,YAClBC,KAAMK,EAAKL,KACXC,aAAcI,EAAKJ,oBCFdO,MAbf,WAEE,OACE,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAD,U,iCCQKC,MAlBf,WACE,OACE,6BACA,kBAACC,EAAA,EAAD,KACE,wBAAIpB,UAAU,aAAd,sBACA,wBAAIA,UAAU,SACd,4BACA,uBAAGE,KAAQmB,IAAKC,OAAS,SAASC,IAAI,uBAAtC,kBAA2E,8BAC3E,uBAAGrB,KAAK,qCAAR,SAAkD,8BAClD,uBAAGA,KAAK,6DAAR,WAA4E,8BAE5E,uBAAGA,KAAK,qCAAR,wCCMSsB,MAnBf,WASE,OACE,6BACE,2BARU,gSCqBDC,MAlBf,WACE,OACE,6BACE,kBAACR,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KACE,kBAAC,EAAD,QAGJ,kBAACT,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KACE,kBAAC,EAAD,UCMKC,MAff,WACE,OACE,kBAAC,IAAD,CAAYC,SAAS,KACrB,yBAAK5B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,IAAIC,UAAWN,IACjC,kBAAC,IAAD,CAAOK,KAAK,aAAaC,UAAWhB,QCJxBiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e9f7168a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.1a4df233.pdf\";","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction NavComponent() {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand >Christian Gonzalez</Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"/\">Home</Nav.Link>\r\n        <Nav.Link href=\"/portfolio\">Portfolio</Nav.Link>\r\n      </Nav>\r\n      </Navbar>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default NavComponent; ","import React from \"react\";\r\n\r\nfunction ProjectCard (props) {\r\n\r\n  return (\r\n    <div>\r\n      <h3>{props.title}</h3>\r\n      <p>{props.description}</p>\r\n      <a href={props.repo}>Repo </a>\r\n      <a href={props.deployedPage}>Deployed Page</a>\r\n      <p></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectCard; ","import React from 'react';\r\n// Components\r\nimport ProjectCards from './ProjectCards';\r\n\r\n// portfolio data\r\nimport pfData from './PortfolioData.json';\r\n\r\nfunction PortfolioData () {\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <hr className=\"my-4\"/>\r\n      <h2>Projects and Homework</h2>\r\n      <h6>From my coding bootcamp</h6>\r\n      <hr className=\"my-4\"/>\r\n\r\n      {pfData.map((data, index) => (\r\n        <ProjectCards \r\n          title={data.title}\r\n          description={data.description}\r\n          repo={data.repo}\r\n          deployedPage={data.deployedPage}\r\n        />\r\n      ))}\r\n            {/* <h3>Songwriters Lament</h3>\r\n            <p>My second project. Working and figuring out passport for login information, we also made an application for saving lyrics for each user.</p>\r\n            <a href=\"https://github.com/schoess/Songwriters_Lament\">Repo</a>\r\n            <a href=\"https://project-2-schoess.herokuapp.com/\">Deployed Page</a>\r\n            <p></p>\r\n            <h3>Employee Management Team</h3>\r\n            <p>My third project. Building a website to handle employee information and keeping track of documents of those employees. A nice challenge for my team who built it with no knowledge of AWS and Chat implementation.</p>\r\n            <a href=\"https://github.com/jonafi/emt\">Repo</a>\r\n            <a href=\"https://team-c2c-emt.herokuapp.com/\">Deployed Page</a>\r\n            <p></p>\r\n            <h3>Object Oriented Programming</h3>\r\n            <p></p>\r\n            <a href=\"https://github.com/tiempoAutomata/HWOOPandTDD\">Repo </a>\r\n            <a href=\"\">Deployed Page</a>\r\n            <p></p>\r\n            <h3>Weather API</h3>\r\n            <p></p>\r\n            <a href=\"https://github.com/tiempoAutomata/HWWeatherAPI\">Repo </a>\r\n            <a href=\"https://tiempoautomata.github.io/HWWeatherAPI\">Deployed Page</a>\r\n            <p></p>\r\n            <h3>Password Generator</h3>\r\n            <p></p>\r\n            <a href=\"https://github.com/tiempoAutomata/HWPasswordGenerator\">Repo </a>\r\n            <a href=\"https://tiempoautomata.github.io/HWPasswordGenerator/\">Deployed Page</a>\r\n            <p></p>\r\n            <h3>Note Taker</h3>\r\n            <p></p>\r\n            <a href=\"https://github.com/tiempoAutomata/HWNoteTaker\">Repo </a>\r\n            <a href=\"https://aqueous-woodland-55844.herokuapp.com/\">Deployed Page</a>\r\n            <p></p> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PortfolioData; ","import React from 'react';\r\n// Bootstrap\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n// Components\r\nimport PortfolioDis from '../components/PortfolioDis.js';\r\n\r\n\r\nfunction Portfolio () {\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <PortfolioDis/>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Portfolio; ","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nimport Pdf from '../Resume.pdf';\r\nfunction Title () {\r\n  return (\r\n    <div>\r\n    <Jumbotron>\r\n      <h3 className=\"display-4\">Christian Gonzalez</h3>\r\n      <hr className=\"my-4\"/>\r\n      <p></p>\r\n      <a href = {Pdf} target = \"_blank\" rel=\"noopener noreferrer\">Download Resume<br/></a>\r\n      <a href=\"https://github.com/tiempoAutomata\">Github<br/></a>\r\n      <a href=\"https://www.linkedin.com/in/christian-gonzalez-05628519b/\">Linkedin<br/></a>\r\n\r\n      <a href=\"christian.gonzalez.2633@gmail.com\">christian.gonzalez.2633@gmail.com</a>\r\n    </Jumbotron>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Title; ","import React from 'react';\r\n\r\nfunction MyInfo() {\r\n  // data about me\r\n  const info = {\r\n    description: \r\n    `Hello, my name is Christian Gonzalez and I have started to learn how to code with HTML, Node, React, Sequelize, MongoDB, and Express through the coding bootcamp at the University of Minnesota.\r\n    \r\n    Here you can see all the works I've done along witht the projects I've created`\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>\r\n        {info.description}\r\n      </p>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default MyInfo; ","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport Title from '../components/Title';\r\nimport MyInfo from '../components/MyInfo.js';\r\n\r\n\r\nfunction AboutMe() {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <Title/>\r\n        </Col>  \r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <MyInfo/>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default AboutMe; ","import React from 'react';\nimport { BrowserRouter as HashRouter, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n// Bootstrap\nimport Nav from \"./components/NavComponent\";\n// Pages\nimport Portfolio from './pages/Portfolio';\nimport AboutMe from './pages/AboutMe';\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n    <div className=\"App\">\n      <Nav/>\n      <Switch>\n        <Route exact path=\"/\" component={AboutMe}/>\n        <Route path=\"/portfolio\" component={Portfolio}/>\n      </Switch>\n    </div>\n    </HashRouter>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}